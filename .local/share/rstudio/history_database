1692467554734:library(sfnetworks)
1692467556695:library(tidyverse)
1692467557632:library(osmdata)
1692467557719:library(sfnetworks)
1692467557768:library(units)
1692467557839:library(sf)
1692467557899:library(tidygraph)
1692467557956:library(tmap)
1692467565864:library(here)
1692467566118:# Bounding Box for Atlanta.
1692467566170:bb_atl <- getbb("Atlanta,GA")
1692467583473:# Bounding Box for Atlanta.
1692467583511:bb_atl <- getbb("Atlanta, GA")
1692467610412:library(httr2)
1692467915298:# Bounding Box for Atlanta.
1692467915564:#bb_atl <- getbb("Atlanta, GA")
1692467915603:bb_atl <- nominatimlite::geo_lite_sf('Atlanta, GA')
1692467971785:# Bounding Box for Atlanta.
1692467971821:#bb_atl <- getbb("Atlanta, GA")
1692467971858:install.packages('nominatimlite')
1692467987962:bb_atl <- nominatimlite::geo_lite_sf('Atlanta, GA')
1692467990149:# Get OSM data.
1692467990242:osm_road <- opq(bbox = bb_atl) %>%
1692467990297:add_osm_feature(key = 'highway',
1692467990357:value = c("motorway", "trunk", "primary",
1692467990416:"secondary", "tertiary", "unclassified",
1692467990568:"residential")) %>%
1692467990628:osmdata_sf() %>%
1692467990678:osm_poly2line()
1692468003152:# Bounding Box for Atlanta.
1692468003188:#bb_atl <- getbb("Atlanta, GA")
1692468003221:install.packages('nominatimlite')
1692468003364:bb_atl <- nominatimlite::geo_lite_sf('Atlanta, GA') %>% st_bbox()
1692468005437:# Get OSM data.
1692468005498:osm_road <- opq(bbox = bb_atl) %>%
1692468005557:add_osm_feature(key = 'highway',
1692468005620:value = c("motorway", "trunk", "primary",
1692468005678:"secondary", "tertiary", "unclassified",
1692468005743:"residential")) %>%
1692468005811:osmdata_sf() %>%
1692468005881:osm_poly2line()
1692468007110:# Convert the OSM line to sfnetworks and clean it.
1692468007145:net <- osm_road$osm_lines %>%
1692468007174:select(osm_id, highway) %>%
1692468007202:sfnetworks::as_sfnetwork(directed = FALSE) %>%
1692468007230:activate("edges") %>%
1692468007258:filter(!edge_is_multiple()) %>%
1692468007296:filter(!edge_is_loop()) %>%
1692468007329:convert(., sfnetworks::to_spatial_subdivision) %>%
1692468007360:convert(., sfnetworks::to_spatial_smooth) %>%
1692468007392:mutate(legnth = edge_length())
1692468024524:View(osm_road)
1692468061769:# Bounding Box for Atlanta.
1692468061827:#bb_atl <- getbb("Atlanta, GA")
1692468061868:#install.packages('nominatimlite')
1692468061913:bb_atl <- nominatimlite::geo_lite_sf('Atlanta, GA', point_only = F) %>%
1692468061946:st_bbox()
1692468067537:# Bounding Box for Atlanta.
1692468067583:#bb_atl <- getbb("Atlanta, GA")
1692468067633:#install.packages('nominatimlite')
1692468067671:bb_atl <- nominatimlite::geo_lite_sf('Atlanta, GA', points_only = F) %>%
1692468067709:st_bbox()
1692468069525:# Get OSM data.
1692468069566:osm_road <- opq(bbox = bb_atl) %>%
1692468069603:add_osm_feature(key = 'highway',
1692468069641:value = c("motorway", "trunk", "primary",
1692468069676:"secondary", "tertiary", "unclassified",
1692468069710:"residential")) %>%
1692468069743:osmdata_sf() %>%
1692468069776:osm_poly2line()
1692468083902:# Convert the OSM line to sfnetworks and clean it.
1692468083959:net <- osm_road$osm_lines %>%
1692468084008:select(osm_id, highway) %>%
1692468084050:sfnetworks::as_sfnetwork(directed = FALSE) %>%
1692468084096:activate("edges") %>%
1692468084136:filter(!edge_is_multiple()) %>%
1692468084173:filter(!edge_is_loop()) %>%
1692468084213:convert(., sfnetworks::to_spatial_subdivision) %>%
1692468084252:convert(., sfnetworks::to_spatial_smooth) %>%
1692468084295:mutate(legnth = edge_length())
1692468105712:edges <- net %>%
1692468105767:# Extract 'edges'
1692468105827:st_as_sf("edges") %>%
1692468105877:# Drop redundant columns
1692468105926:select(osm_id, highway) %>%
1692468105967:# Add length column
1692468106003:mutate(length = st_length(.) %>% unclass()) %>%
1692468106036:# Drop segments that are too short (100m)
1692468106070:filter(length > 50) %>%
1692468106107:# Add a unique ID for each edge
1692468106146:mutate(edge_id = seq(1,nrow(.)))
1692468106518:# nodes <- net %>%
1692468106558:#   st_as_sf("nodes") %>%
1692468106595:#   mutate(node_id = seq(1,nrow(.)))
1692468113535:# Select an edge for demo
1692468113816:test_edge = 23126
1692468113879:e <- edges %>% filter(edge_id == test_edge)
1692468113998:# View it
1692468114036:tmap_mode('view')
1692468114082:e %>% st_coordinates() %>%
1692468114119:as.data.frame() %>%
1692468114156:st_as_sf(coords = c("X", "Y"), crs = 4326) %>%
1692468114194:with(
1692468114234:tm_shape(.) + tm_dots() +
1692468114273:tm_shape(.[1,]) + tm_dots(col = "red") +  # Start = red
1692468114313:tm_shape(.[nrow(.),]) + tm_dots(col = "yellow")  # End = yellow
1692468114351:)
1692468152092:# -----------------------------------------------------------
1692468152184:# First intersection
1692468152441:# First two points from a line
1692468152497:start_p <- e %>%
1692468152532:st_coordinates() %>%
1692468152571:.[1:2,1:2]
1692468152647:# Calculate the azimuth of the line connecting the two points
1692468152685:start_azi <- atan2(start_p[2,"X"] - start_p[1, "X"],
1692468152718:start_p[2,"Y"] - start_p[1, "Y"])*180/pi # 180/pi because trigonometry in R takes radians
1692468152800:# -----------------------------------------------------------
1692468152852:# The other intersection
1692468152895:# Last two points from a line
1692468152929:end_p <- e %>%
1692468152962:st_coordinates() %>%
1692468153001:.[(nrow(.)-1):nrow(.),1:2]
1692468153092:# Calculate the azimuth of the line connecting the two points
1692468153139:end_azi <- atan2(end_p[2,"X"] - end_p[1, "X"],
1692468153181:end_p[2,"Y"] - end_p[1, "Y"])*180/pi
1692468153263:# Flip the azimuth so that the camera would be looking back
1692468153308:end_azi <- if (end_azi < 180) {end_azi + 180} else {end_azi - 180}
1692468153379:# ----------------------------------------------------------
1692468153417:# mid point
1692468153450:mid_p <- e %>%
1692468153481:st_geometry() %>%
1692468153513:.[[1]] %>%
1692468153549:st_line_sample(sample = c(0.45, 0.55)) %>%
1692468153583:st_cast("POINT") %>%
1692468153617:st_coordinates()
1692468153696:mid_azi <- atan2(mid_p[2,"X"] - mid_p[1, "X"],
1692468153732:mid_p[2,"Y"] - mid_p[1, "Y"])*180/pi
1692468153813:mid_p <- e %>%
1692468153852:st_geometry() %>%
1692468153885:.[[1]] %>%
1692468153919:st_line_sample(sample = 0.5) %>%
1692468153952:st_coordinates() %>%
1692468153987:.[1,1:2]
1692468161586:get_azi <- function(line){
1692468161839:# end point 1 ----------------------------------------------
1692468161875:start_p <- line %>%
1692468161928:st_coordinates() %>%
1692468161968:.[1:2,1:2]
1692468162035:start_azi <- atan2(start_p[2,"X"] - start_p[1, "X"],
1692468162076:start_p[2,"Y"] - start_p[1, "Y"])*180/pi
1692468162139:# end point 2 ----------------------------------------------
1692468162174:end_p <- line %>%
1692468162208:st_coordinates() %>%
1692468162240:.[(nrow(.)-1):nrow(.),1:2]
1692468162299:end_azi <- atan2(end_p[2,"X"] - end_p[1, "X"],
1692468162340:end_p[2,"Y"] - end_p[1, "Y"])*180/pi
1692468162412:end_azi <- if (end_azi < 180) {end_azi + 180} else {end_azi - 180}
1692468162479:# mid point 1 ---------------------------------------------
1692468162511:mid_p <- line %>%
1692468162544:st_line_sample(sample = c(0.45, 0.55)) %>%
1692468162575:st_cast("POINT") %>%
1692468162609:st_coordinates()
1692468162678:mid_azi <- atan2(mid_p[2,"X"] - mid_p[1, "X"],
1692468162718:mid_p[2,"Y"] - mid_p[1, "Y"])*180/pi
1692468162784:mid_p <- line %>%
1692468162817:st_line_sample(sample = 0.5) %>%
1692468162846:st_coordinates() %>%
1692468162879:.[1,1:2]
1692468162967:# return in data frame ------------------------------------
1692468163006:return(tribble(
1692468163039:~type,    ~X,            ~Y,             ~azi,
1692468163072:"start",   start_p[1,"X"], start_p[1,"Y"], start_azi,
1692468163106:"mid1",    mid_p["X"],   mid_p["Y"],   mid_azi,
1692468163138:"mid2",    mid_p["X"],   mid_p["Y"],   ifelse(mid_azi < 180, mid_azi + 180, mid_azi - 180),
1692468163170:"end",     end_p[2,"X"],   end_p[2,"Y"],   end_azi))
1692468163202:}
1692468216066:endp_azi <- edges %>%
1692468216157:st_geometry() %>%
1692468216384:map_df(get_azi)
1692468290076:endp <- endp_azi %>%
1692468290125:bind_cols(edges %>%
1692468290164:st_drop_geometry() %>%
1692468290201:slice(rep(1:nrow(edges),each=4))) %>%
1692468290237:st_as_sf(coords = c("X", "Y"), crs = 4326, remove=FALSE) %>%
1692468290273:mutate(node_id = seq(1, nrow(.)))
1692468290409:endp
1692468298774:get_image <- function(iterrow){
1692468299009:type = iterrow$type
1692468299040:location <- paste0(iterrow$Y %>% round(4), ",", iterrow$X %>% round(4))
1692468299075:heading <- iterrow$azi %>% round(1)
1692468299134:edge_id <- iterrow$edge_id
1692468299173:node_id <- iterrow$node_id
1692468299207:highway <- iterrow$highway
1692468299240:key <- Sys.getenv("google_api")
1692468299300:furl <- glue::glue("https://maps.googleapis.com/maps/api/streetview?size=640x640&location={location}&heading={heading}&fov=90&pitch=0&key={key}")
1692468299332:fname <- glue::glue("GSV-nid_{node_id}-eid_{edge_id}-type_{type}-Location_{location}-heading_{heading}-highway_{highway}.jpg")
1692468299363:fpath <- here("Lab", "module_4", "downloaded_image", fname)
1692468299397:download.file(furl, fpath, mode = 'wb')
1692468299433:}
1692468313444:26657*4
1692468324566:# Download images
1692468324824:edges_gt <- st_read(here("Lab", "module_4", "endp_atlantic_station.geojson"))
1692468325065:# Loop!
1692468325106:for (i in seq(1,nrow(edges_gt))){
1692468325160:get_image(edges_gt[i,])
1692468325199:}
1692468645229:View(edges_gt)
1692468752261:# Extract a curvy line
1692468752515:z <- edges %>% filter(edge_id == test_edge)
1692468752567:tm_shape(z) + tm_lines()
1692468753583:# calculate what proportion equals 40 in the given segment
1692468753630:prop <- 40/z$length
1692468753721:# Vector for actual points
1692468753799:sample_actual <- c(seq(0, 1, by=prop),1)
1692468753884:# Vector for two points before/after the actual points for azimuth calculation
1692468753936:sample_azi <- c(sample_actual-0.02, sample_actual+0.02) %>% sort()
1692468754016:# Sample points
1692468754202:sampled_actual <- z %>% st_transform(26967) %>% st_line_sample(sample = sample_actual) %>% st_cast("POINT")
1692468755709:sampled_azi <- z %>% st_transform(26967) %>% st_line_sample(sample = sample_azi) %>% st_cast("POINT")
1692468755825:# View them
1692468755878:tm_shape(sampled_actual) + tm_dots(col = "red", size=0.07) +
1692468755923:tm_shape(sampled_azi) + tm_dots(col = "blue", alpha = 0.5)
1692468757014:# Calculate azimuth
1692468757060:point_azi <- sampled_actual %>%
1692468757106:st_sf() %>%
1692468757145:mutate(azi = NA)
1692468757231:for (i in 1:nrow(point_azi)){
1692468757270:j <- i*2 - 1
1692468757310:point_azi[i, "azi"] <- sampled_azi %>%
1692468757344:st_cast("POINT") %>%
1692468757380:.[j:(j+1)] %>%
1692468757418:st_coordinates() %>%
1692468757457:as.data.frame() %>%
1692468757507:with(
1692468757567:.[2,] - .[1,]
1692468757619:) %>%
1692468757663:with(
1692468757713:atan2(.[["X"]], .[["Y"]])*180/pi
1692468757764:)
1692468757809:}
1692468764081:sample_actual
1692468777273:z$length
1692468787312:prop
1692468798680:sample_actual
1692468901379:# Download the output from the computer vision models
1692468901477:pspnet <- read.csv(here("Lab", "Module_4", "seg_output.csv"))
1692468901858:# Join them back to the template used to download images
1692468901898:pspnet_nodes <- edges_gt %>% inner_join(pspnet, by="node_id")
1692468902030:# Map!
1692468902072:tm_shape(pspnet_nodes %>%
1692468902110:mutate(pct_tree = tree/(640*640))) +
1692468902145:tm_dots(col = "pct_tree", style="quantile")
1692468918291:compare_df <- pspnet_nodes %>%
1692468918366:mutate(type = case_when(rownames(.) < 163 ~ "first",
1692468918600:TRUE ~ "second"))
1692468918759:compare_df %>%
1692468918795:group_by(type) %>%
1692468918828:summarise(across(c("building", "tree", "road", "sidewalk", "sky"), mean))
1692468923031:compare_df %>%
1692468923117:pivot_longer(cols = c(building, sky, tree, road, sidewalk), names_to = 'variable', values_to = "value") %>%
1692468923379:ggplot() +
1692468923431:geom_boxplot(mapping = aes(x = type, y = value)) +
1692468923466:facet_wrap(~variable, scales = "free_y")
1692468928140:compare_df %>%
1692468928420:select(type, building, sky, tree, road, sidewalk) %>%
1692468928454:st_drop_geometry() %>%
1692468928489:group_by(type) %>%
1692468928523:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692468928558:pivot_longer(cols = building:sidewalk) %>%
1692468928590:pivot_wider(names_from=type, values_from=value) %>%
1692468928626:mutate(test = t.test(unlist(first), unlist(second))$statistic)
1692468995639:compare_df %>%
1692468995676:select(type, building, sky, tree, road, sidewalk) %>%
1692468995713:st_drop_geometry() %>%
1692468995749:group_by(type) %>%
1692468995785:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692468995849:pivot_longer(cols = building:sidewalk) %>%
1692468995888:pivot_wider(names_from=type, values_from=value) %>%
1692468995927:mutate(test = t.test(unlist(first), unlist(second))$statistic)
1692469003206:compare_df
1692469046944:a <- compare_df %>%
1692469046977:select(type, building, sky, tree, road, sidewalk) %>%
1692469047008:st_drop_geometry() %>%
1692469047041:group_by(type) %>%
1692469047075:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469047109:pivot_longer(cols = building:sidewalk) %>%
1692469047159:pivot_wider(names_from=type, values_from=value) %>%
1692469047199:mutate(test = t.test(unlist(first), unlist(second))$statistic)
1692469051001:a
1692469059130:a$first
1692469061741:a$first[1]
1692469081513:View(a)
1692469119968:compare_df %>%
1692469120006:select(type, building, sky, tree, road, sidewalk) %>%
1692469120035:st_drop_geometry() %>%
1692469120062:group_by(type) %>%
1692469120089:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469120117:pivot_longer(cols = building:sidewalk)
1692469127883:compare_df %>%
1692469127908:select(type, building, sky, tree, road, sidewalk) %>%
1692469127935:st_drop_geometry() %>%
1692469127960:group_by(type) %>%
1692469127987:summarise(across(c(building, sky, tree, road, sidewalk), list))
1692469136657:compare_df %>%
1692469136688:select(type, building, sky, tree, road, sidewalk) %>%
1692469136713:st_drop_geometry() %>%
1692469136742:group_by(type) %>%
1692469136770:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469136800:pivot_longer(cols = building:sidewalk) %>%
1692469136832:pivot_wider(names_from=type, values_from=value)
1692469150846:a <- compare_df %>%
1692469150875:select(type, building, sky, tree, road, sidewalk) %>%
1692469150900:st_drop_geometry() %>%
1692469150929:group_by(type) %>%
1692469150959:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469150984:pivot_longer(cols = building:sidewalk) %>%
1692469151011:pivot_wider(names_from=type, values_from=value)
1692469177994:t.test(a$first[1], a$second[1])
1692469189171:t.test(unlist(a$first[1]), unlist(a$second[1]))
1692469194406:t.test(unlist(a$first[1]), unlist(a$second[1]))$statistics
1692469196739:t.test(unlist(a$first[1]), unlist(a$second[1]))$statistic
1692469215377:summary(t.test(unlist(a$first[1]), unlist(a$second[1])))
1692469225466:t.test(unlist(a$first[1]), unlist(a$second[1]))$p.value
1692469264656:a <- compare_df %>%
1692469264896:select(type, building, sky, tree, road, sidewalk) %>%
1692469264928:st_drop_geometry() %>%
1692469264963:group_by(type) %>%
1692469265004:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469265040:pivot_longer(cols = building:sidewalk) %>%
1692469265080:pivot_wider(names_from=type, values_from=value) %>%
1692469265136:mutate(test = t.test(unlist(first), unlist(second))$statistic)
1692469282589:compare_df %>%
1692469282625:select(type, building, sky, tree, road, sidewalk) %>%
1692469282659:st_drop_geometry() %>%
1692469282694:group_by(type) %>%
1692469282736:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469282792:pivot_longer(cols = building:sidewalk) %>%
1692469282841:pivot_wider(names_from=type, values_from=value) %>%
1692469282883:mutate(test = t.test(unlist(first), unlist(second))$p.value)
1692469327276:compare_df
1692469376138:t.test(compare_df_summary['building', 'first'], compare_df_summary['building', 'second'])
1692469382210:compare_df_summary <- compare_df %>%
1692469382249:select(type, building, sky, tree, road, sidewalk) %>%
1692469382284:st_drop_geometry() %>%
1692469382320:group_by(type) %>%
1692469382361:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469382416:pivot_longer(cols = building:sidewalk) %>%
1692469382456:pivot_wider(names_from=type, values_from=value)
1692469382599:t.test(compare_df_summary['building', 'first'], compare_df_summary['building', 'second'])
1692469395339:t.test(unlist(compare_df_summary['building', 'first']), unlist(compare_df_summary['building', 'second']))
1692469398250:compare_df_summary <- compare_df %>%
1692469398283:select(type, building, sky, tree, road, sidewalk) %>%
1692469398316:st_drop_geometry() %>%
1692469398349:group_by(type) %>%
1692469398391:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469398450:pivot_longer(cols = building:sidewalk) %>%
1692469398499:pivot_wider(names_from=type, values_from=value)
1692469398646:t.test(unlist(compare_df_summary['building', 'first']), unlist(compare_df_summary['building', 'second']))
1692469407704:compare_df_summary
1692469421755:compare_df_summary$name
1692469431150:compare_df_summary <- compare_df %>%
1692469431173:select(type, building, sky, tree, road, sidewalk) %>%
1692469431198:st_drop_geometry() %>%
1692469431221:group_by(type) %>%
1692469431247:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692469431273:pivot_longer(cols = building:sidewalk) %>%
1692469431301:pivot_wider(names_from=type, values_from=value) %>%
1692469431326:as.data.frame()
1692469434543:View(compare_df_summary)
1692469548882:print(paste0(compare_df_summary$name[i]))
1692469565543:t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second']))
1692469580256:for (i in 1:nrow(compare_df_summary)){
1692469580288:print(paste0(compare_df_summary$name[i]))
1692469580315:t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second']))
1692469580344:}
1692469591319:print('-----------')
1692469592853:for (i in 1:nrow(compare_df_summary)){
1692469592887:print(paste0(compare_df_summary$name[i]))
1692469592919:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692469592950:print('-----------')
1692469592976:}
1692469604776:cat(paste0(compare_df_summary$name[i]))
1692469616988:for (i in 1:nrow(compare_df_summary)){
1692469617017:cat(compare_df_summary$name[i])
1692469617271:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692469617299:cat('-----------')
1692469617328:}
1692469626034:cat(compare_df_summary$name[i])
1692469627119:for (i in 1:nrow(compare_df_summary)){
1692469627152:cat(compare_df_summary$name[i])
1692469627184:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692469627213:cat('-----------\t\t')
1692469627245:}
1692469636575:for (i in 1:nrow(compare_df_summary)){
1692469636605:cat(compare_df_summary$name[i])
1692469636632:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692469636659:cat('-----------\n\n')
1692469636687:}
1692469650787:cat('a', compare_df_summary$name[i])
1692469683986:for (i in 1:nrow(compare_df_summary)){
1692469684014:cat('#### Comparison: \t', compare_df_summary$name[i], '\t####')
1692469684042:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692469684068:cat('-----------\n\n')
1692469684098:}
1692469695137:for (i in 1:nrow(compare_df_summary)){
1692469695163:cat('#### Comparison: ', compare_df_summary$name[i], ' ####')
1692469695191:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692469695216:cat('-----------\n\n')
1692469695242:}
1692469788639:compare_df %>%
1692469788672:group_by(type) %>%
1692469788754:summarise(across(c("building", "tree", "road", "sidewalk", "sky"), mean/(640^2)))
1692469795252:640^2
1692469805211:compare_df %>%
1692469805236:group_by(type) %>%
1692469805264:summarise(across(c("building", "tree", "road", "sidewalk", "sky"), .x ~ mean(x)/(640^2)))
1692469855684:compare_df %>%
1692469855717:group_by(type) %>%
1692469855773:summarise(across(c("building", "tree", "road", "sidewalk", "sky"), ~ mean(.x)/(640^2)))
1692469869159:compare_df %>%
1692469869197:group_by(type) %>%
1692469869226:summarise(across(c("building", "tree", "road", "sidewalk", "sky"), ~ round(mean(.x)/(640^2), 2)))
1692469916922:compare_df %>%
1692469917175:pivot_longer(cols = c(building, sky, tree, road, sidewalk), names_to = 'variable', values_to = "value") %>%
1692469917208:ggplot() +
1692469917242:geom_boxplot(mapping = aes(x = type, y = value)) +
1692469917293:facet_wrap(~variable, scales = "free_y")
1692469944323:compare_df <- pspnet_nodes %>%
1692469944355:mutate(type = case_when(rownames(.) < 163 ~ "first",
1692469944386:TRUE ~ "second"))
1692469947814:View(compare_df)
1692470030870:compare_df %>%
1692470030897:pivot_longer(cols = c(building, sky, tree, road, sidewalk), names_to = 'variable', values_to = "value") %>%
1692470030925:ggplot() +
1692470030952:geom_boxplot(mapping = aes(x = type, y = value/(640^2))) +
1692470030980:facet_wrap(~variable, scales = "free_y")
1692470084170:View(compare_df_summary)
1692470123815:compare_df_summary <- compare_df %>%
1692470123845:select(type, building, sky, tree, road, sidewalk) %>%
1692470123880:st_drop_geometry() %>%
1692470123911:group_by(type) %>%
1692470123939:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692470123969:pivot_longer(cols = building:sidewalk) %>%
1692470123998:pivot_wider(names_from=type, values_from=value) %>%
1692470124027:mutate(first = first/(640^2),
1692470124058:second = second/(640^2))
1692470140939:c(1,2,3,4,5,3)/3
1692470242773:compare_df_summary <- compare_df %>%
1692470242809:select(type, building, sky, tree, road, sidewalk) %>%
1692470242836:mutate(across(c(building, sky, tree, road, sidewalk), ~ .x/(640^2)))
1692470250267:compare_df_summary <- compare_df %>%
1692470250303:select(type, building, sky, tree, road, sidewalk) %>%
1692470250336:mutate(across(c(building, sky, tree, road, sidewalk), ~ .x/(640^2))) %>%
1692470250370:st_drop_geometry() %>%
1692470250404:group_by(type) %>%
1692470250463:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692470250503:pivot_longer(cols = building:sidewalk) %>%
1692470250542:pivot_wider(names_from=type, values_from=value)
1692470250687:for (i in 1:nrow(compare_df_summary)){
1692470250733:cat('#### Comparison: ', compare_df_summary$name[i], ' ####')
1692470250781:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692470250818:cat('-----------\n\n')
1692470250854:}
1692470256026:View(compare_df_summary)
1692470503676:# Bounding Box for Atlanta.
1692470503710:bb_atl <- nominatimlite::geo_lite_sf('Atlanta, GA', points_only = F) %>%
1692470503739:st_bbox()
1692470507996:# Get OSM data.
1692470508030:osm_road <- opq(bbox = bb_atl) %>%
1692470508060:add_osm_feature(key = 'highway',
1692470508092:value = c("motorway", "trunk", "primary",
1692470508120:"secondary", "tertiary", "unclassified",
1692470508155:"residential")) %>%
1692470508185:osmdata_sf() %>%
1692470508212:osm_poly2line()
1692470686709:# Download images
1692470686744:edges_gt <- st_read("https://raw.githubusercontent.com/ujhwang/UrbanAnalytics2023/main/Lab/module_4/endp_gt.geojson")
1692471554501:# Download images
1692471554528:edges_as <- st_read("https://raw.githubusercontent.com/ujhwang/UrbanAnalytics2023/main/Lab/module_4/endp_atlantic_station.geojson")
1692471559891:# Download the output from the computer vision models
1692471560132:pspnet <- read.csv(here("Lab", "Module_4", "seg_output.csv"))
1692471560306:# Join them back to the template used to download images
1692471560340:pspnet_nodes <- edges_as %>% inner_join(pspnet, by="node_id")
1692471560464:# Map!
1692471560501:tm_shape(pspnet_nodes %>%
1692471560533:mutate(pct_tree = tree/(640*640))) +
1692471560565:tm_dots(col = "pct_tree", style="quantile")
1692471585689:compare_df <- pspnet_nodes %>%
1692471585767:mutate(type = case_when(rownames(.) < 163 ~ "first",
1692471586014:TRUE ~ "second"))
1692471586194:compare_df %>%
1692471586227:group_by(type) %>%
1692471586261:summarise(across(c("building", "tree", "road", "sidewalk", "sky"), ~ round(mean(.x)/(640^2), 2)))
1692471588575:View(compare_df)
1692471611387:View(pspnet_nodes)
1692471630872:rownames(pspnet_nodes)
1692471812721:compare_df <- pspnet_nodes %>%
1692471812747:mutate(type = case_when(type %in% c('mid1', 'mid2') ~ "midpoint",
1692471812772:TRUE ~ "intersection"))
1692471815790:compare_df %>%
1692471815814:group_by(type) %>%
1692471815839:summarise(across(c("building", "tree", "road", "sidewalk", "sky"), ~ round(mean(.x)/(640^2), 2)))
1692471827996:compare_df %>%
1692471828267:pivot_longer(cols = c(building, sky, tree, road, sidewalk), names_to = 'variable', values_to = "value") %>%
1692471828304:ggplot() +
1692471828341:geom_boxplot(mapping = aes(x = type, y = value/(640^2))) +
1692471828378:facet_wrap(~variable, scales = "free_y")
1692471945365:compare_df_summary <- compare_df %>%
1692471945599:select(type, building, sky, tree, road, sidewalk) %>%
1692471945633:mutate(across(c(building, sky, tree, road, sidewalk), ~ .x/(640^2))) %>%
1692471945666:st_drop_geometry() %>%
1692471945700:group_by(type) %>%
1692471945734:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692471945768:pivot_longer(cols = building:sidewalk) %>%
1692471945801:pivot_wider(names_from=type, values_from=value)
1692471945954:for (i in 1:nrow(compare_df_summary)){
1692471945994:cat('#### Comparison: ', compare_df_summary$name[i], ' ####')
1692471946027:print(t.test(unlist(compare_df_summary[i, 'first']), unlist(compare_df_summary[i, 'second'])))
1692471946060:cat('-----------\n\n')
1692471946092:}
1692471958717:compare_df_summary <- compare_df %>%
1692471958751:select(type, building, sky, tree, road, sidewalk) %>%
1692471958786:mutate(across(c(building, sky, tree, road, sidewalk), ~ .x/(640^2))) %>%
1692471958821:st_drop_geometry() %>%
1692471958855:group_by(type) %>%
1692471958905:summarise(across(c(building, sky, tree, road, sidewalk), list)) %>%
1692471958942:pivot_longer(cols = building:sidewalk) %>%
1692471958976:pivot_wider(names_from=type, values_from=value)
1692471959119:for (i in 1:nrow(compare_df_summary)){
1692471959155:cat('#### Comparison: ', compare_df_summary$name[i], ' ####')
1692471959194:print(t.test(unlist(compare_df_summary[i, 'midpoint']), unlist(compare_df_summary[i, 'intersection'])))
1692471959236:cat('-----------\n\n')
1692471959272:}
1692473704720:# Package names
1692473705017:packages <- c("redditExtractoR", "anytime", "ggplot2", "dplyr", "tidytext", "tidyverse", "igraph", "ggraph", "tidyr", "wordcloud2", "textdata", "sf", "tmap")
1692473705107:# Install packages not yet installed
1692473705152:installed_packages <- packages %in% rownames(installed.packages())
1692473705300:if (any(installed_packages == FALSE)) {
1692473705332:install.packages(packages[!installed_packages])
1692473705366:}
1692473720189:# Load packages
1692473720274:invisible(lapply(packages, library, character.only = TRUE))
1692473733542:# Package names
1692473733594:packages <- c("RedditExtractoR", "anytime", "ggplot2", "dplyr", "tidytext", "tidyverse", "igraph", "ggraph", "tidyr", "wordcloud2", "textdata", "sf", "tmap")
1692473733708:# Install packages not yet installed
1692473733755:installed_packages <- packages %in% rownames(installed.packages())
1692473733916:if (any(installed_packages == FALSE)) {
1692473733957:install.packages(packages[!installed_packages])
1692473734006:}
1692473734089:# Load packages
1692473734130:invisible(lapply(packages, library, character.only = TRUE))
