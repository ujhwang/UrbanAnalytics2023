df <- c(a,b,c)
df*2.54
x <- 35; y <- 19 +5/8; z <- 70 +1/2
df2 <- c(x,y,z)
df2+2.54
df2*2.54
df*2.54
c(35, 63)*2.54
122/2.54
library(sf)
rmarkdown:::partition_yaml_front_matter
install.packages(rmarkdown, dependencies = T)
install.packages('rmarkdown', dependencies = T)
install.packages("rmarkdown", dependencies = T)
install.packages('xaringan')
xaringan:::inf_mr()
remotes::install_github('yihui/xaringan', upgrade = TRUE)
remotes::install_github('yihui/xaringan', upgrade = TRUE)
remotes::install_github('yihui/xaringan', upgrade = TRUE)
xaringan:::inf_mr()
install.packages('')
install.packages('tidytext')
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
getwd()
xaringan:::inf_mr()
xaringan:::inf_mr()
st <- c(
"sbaghel3",
"schoi473",
"lvillaquiran3",
"chan303",
"fhasan30",
"bhuang71",
"ikim302",
"akumar865",
"smartinez63",
"mmurali34",
"amurphy76",
"hoh91",
"npramaputri3",
"lstanovski3",
"kwells65",
"yzhao758"
)
stgt <- paste0(st, collapse = "@gatech.edu")
stgt
stgt <- paste0(st, collapse = "@gatech.edu, ")
stgt
library(tidyverse)
out<- map_chr(st, ~paste0(.x, "@gatech.edu"))
out
write.csv(out, "C:/Users/bonwo/Downloads/roster.csv")
write.csv(out, "C:/Users/bonwo/Downloads/roster.txt")
?write.csv
write_csv(out, "C:/Users/bonwo/Downloads/roster.txt")
write_csv(out, "C:/Users/bonwo/Downloads/roster.txt")
out
xaringan:::inf_mr()
marta
marta %>% filter(1)
marta %>% slice(1)
?slice
marta
marta.point <- marta %>% st_coordinates() %>% st_as_sf(coods = c("X", "Y"), crs = 4326)
marta.point <- marta %>% st_coordinates() %>% as.data.frame() %>% st_as_sf(coods = c("X", "Y"), crs = 4326)
marta %>% st_coordinates()
marta.point <- marta %>% st_coordinates() %>% st_as_sf(coords = c("X", "Y"), crs = 4326)
marta.point <- marta %>% st_coordinates() %>% st_as_sf(coords = c("X", "Y"), crs = 4326)
marta.point <- marta %>% st_coordinates() %>% as.data.frame() %>% st_as_sf(coords = c("X", "Y"), crs = 4326)
marta.point
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
marta
marta
marta.point
five_point <- st_point(c(33.7539, -84.3916)) %>% st_as_sfc(crs = 4326)
five_point <- st_point(c(33.7539, -84.3916)) %>% st_sfc(crs = 4326)
five_point
dist.mat <- marta.point %>% st_distance(five_point)
dist.mat <- marta.point %>% st_distance(five_point)
dist.mat
tm_shape(five_point)+tm_dots()
tmap_mode("view")
tm_shape(five_point)+tm_dots()
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
five_point
tm_shape(five_point)+tm_dots()
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
dist.mat <- marta.point %>% st_distance(five_point)
dist.mat
min.dist <- min(dist.mat)
min.dist
min.dist <- which.min(dist.mat)
min.dist
marta.line %>%
st_coordinates() %>% as.data.frame() %>%
slice(1:closest.pnt)
closest.pnt <- which.min(dist.mat)
marta.line %>%
st_coordinates() %>% as.data.frame() %>%
slice(1:closest.pnt)
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
slice(1:closest.pnt) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326)
marta.line.cut
marta.line.cut
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
dist.mat <- marta.point %>% st_distance(five_point)
closest.pnt <- which.min(dist.mat)
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
slice(1:closest.pnt) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(L2) %>% summarise() %>% st_cast("LINESTRING")
marta.line.cut
marta.line.cut
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = marta.line.cut)
marta.point <- marta %>%
# Extract the first row
slice(2) %>%
# Turn it into coordinates
st_coordinates() %>%
# Turn it into df
as.data.frame() %>%
# df to sf
st_as_sf(coords = c("X", "Y"),
crs = 4326)
marta.point
marta.line <- marta %>%
# Extract the first row
slice(2)
marta.line
library(leaflet)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>% # Background map
addPolylines(data = marta %>% slice(c(1,3)),
color="grey", weight=1) %>% # Adding non-Blue lines
addPolylines(data = marta.line) %>% # Adding marta.line
addCircles(data = marta.point) # Adding marta.point
```
library(xaringanthemer)
library(sf)
library(tidyverse)
library(leaflet)
library(tmap)
library(kableExtra)
```
library(xaringanthemer)
library(sf)
library(tidyverse)
library(leaflet)
library(tmap)
library(kableExtra)
```
xaringan:::inf_mr()
marta
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = marta.line.cut)
rep(1,closest.pnt)
closest.pnt
library(xaringanthemer)
library(sf)
library(tidyverse)
library(leaflet)
library(tmap)
library(kableExtra)
poly <- sf::st_read("https://raw.githubusercontent.com/BonwooKoo/UrbanAnalytics2022/main/Lab/module_0/testdata.geojson")
marta <- sf::st_read("https://raw.githubusercontent.com/BonwooKoo/UrbanAnalytics2022/main/Lab/module_0/MARTA_Routes.geojson")
marta %>% print()
marta[['geometry']]
marta[['geometry']][[1]]
marta %>% st_coordinates()
marta.point <- marta %>%
# Extract the first row
slice(1) %>%
# Turn it into coordinates
st_coordinates() %>%
# Turn it into df
as.data.frame() %>%
# df to sf
st_as_sf(coords = c("X", "Y"),
crs = 4326)
marta.point
marta.line <- marta %>%
# Extract the first row
slice(1)
marta.line
closest.pnt
dist.mat
marta.point
closest.pnt
marta.point
dist.mat
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
dist.mat
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break = c(rep(1,closest.pnt)), rep(2,nrow(.)-closest.pnt)) %>%
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt)), rep(2,nrow(.)-closest.pnt)) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(L2) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING")
rep(1,closest.pnt)
marta.line %>%
st_coordinates() %>% as.data.frame()
marta.line %>%
st_coordinates() %>% as.data.frame()
closest.pnt
c(rep(1,closest.pnt)), rep(2,nrow(.)-closest.pnt)
c(rep(1,closest.pnt)), rep(2,nrow(.)-closest.pnt)
c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))
c(rep(1,closest.pnt), rep(2,nrow(marta.line %>%
st_coordinates() %>% as.data.frame())-closest.pnt))
c(rep(1,closest.pnt), rep(2,nrow(marta.line %>%
st_coordinates() %>% as.data.frame())-closest.pnt)) %>% length()
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(L2) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING")
marta.line.cut
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING")
marta.line.cut
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_lines(col = "break.point")
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326)
marta.line.cut
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_dots(col = "break.point")
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt-1))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326)
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326)
marta.line.cut
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_dots(col = "break.point")
marta.line.cut
marta.line.cut %>% print(n=10000)
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING")
marta.line.cut
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_lines(col = "break.point")
marta.line %>%
st_coordinates() %>% as.data.frame()
marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt)))
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point) %>%  st_cast("LINESTRING")
marta.line.cut
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_lines(col = "break.point")
marta.line.cut
marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING")
marta.line.cut
marta.line %>%
st_coordinates() %>% as.data.frame()
closest.pnt
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point, L1) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING")
marta.line.cut
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_lines(col = "break.point")
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_lines(col = "break.point")
tmap_mode('view')
tm_shape(marta)+tm_lines(col = "break.point")
tmap_mode('view')
tm_shape(marta)+tm_lines()
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point, L1) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING") %>%
group_by(break.point) %>% st_cast("MULTILINESTRING")
marta.line.cut
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(L1) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING") %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("MULTILINESTRING")
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(L1) %>% summarise(break.point = slice(1), do_union=FALSE) %>% st_cast("LINESTRING") %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("MULTILINESTRING")
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point, L1) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING") %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("MULTILINESTRING")
marta.line.cut
library(tmap)
tmap_mode('view')
tm_shape(marta.line.cut)+tm_lines(col = "break.point")
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = marta.line.cut, color = ~pal(break.point))
pal <- colorFactor(palette = c("red", "blue"), domain = marta.line.cut$break.point)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = marta.line.cut, color = ~pal(break.point))
library(xaringanthemer)
library(sf)
library(tidyverse)
library(leaflet)
library(tmap)
library(kableExtra)
poly <- sf::st_read("https://raw.githubusercontent.com/BonwooKoo/UrbanAnalytics2022/main/Lab/module_0/testdata.geojson")
marta <- sf::st_read("https://raw.githubusercontent.com/BonwooKoo/UrbanAnalytics2022/main/Lab/module_0/MARTA_Routes.geojson")
marta %>% print()
marta[['geometry']]
marta[['geometry']][[1]]
marta %>% st_coordinates()
marta.point <- marta %>%
# Extract the first row
slice(2) %>%
# Turn it into coordinates
st_coordinates() %>%
# Turn it into df
as.data.frame() %>%
# df to sf
st_as_sf(coords = c("X", "Y"),
crs = 4326)
marta.point
marta.line <- marta %>%
# Extract the first row
slice(2)
marta.line
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point, L1) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING") %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("MULTILINESTRING")
# Creating POINT feature for five point station
five_point <- st_point(c(-84.3916, 33.7539)) %>% st_sfc(crs = 4326)
# Calculate pairwise distance to all points that define Gold line
dist.mat <- marta.point %>% st_distance(five_point)
# Which row contains the closest point?
closest.pnt <- which.min(dist.mat)
# Parse marta.line and create a cut-off line
marta.line.cut <- marta.line %>%
st_coordinates() %>% as.data.frame() %>%
mutate(break.point = c(rep(1,closest.pnt), rep(2,nrow(.)-closest.pnt))) %>%
st_as_sf(coords=c("X", "Y"), crs = 4326) %>%
group_by(break.point, L1) %>% summarise(do_union=FALSE) %>% st_cast("LINESTRING") %>%
group_by(break.point) %>% summarise(do_union=FALSE) %>% st_cast("MULTILINESTRING")
marta.line.cut
pal <- colorFactor(palette = c("red", "blue"), domain = marta.line.cut$break.point)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = marta.line.cut, color = ~pal(break.point))
pal <- colorFactor(palette = c("red", "blue"), domain = marta.line.cut$break.point)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = marta.line.cut, color = ~pal(break.point)) %>%
addPolylines(data = marta %>% slice(1,3), color="grey", weight=1) %>%
addCircles(data=five_point, color="black", radius=300)
xaringan:::inf_mr()
lintr:::addin_lint_package()
xaringan:::inf_mr()
xaringan:::inf_mr()
poly
tm_shape(poly) + tm_borders()
fp.buffer <- five_point %>% st_buffer(dist = 1000)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = poly) %>%
addPolygons(data = fp.buffer)
fp.buffer <- five_point %>% st_buffer(dist = 1000)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = poly) %>%
addPolygons(data = fp.buffer)
five_point
fp.buffer <- five_point %>% st_buffer(dist = 1000)
